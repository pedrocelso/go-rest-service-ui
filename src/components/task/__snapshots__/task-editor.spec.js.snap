// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskEditor /> Should not render when it is open 1`] = `
<WithStyles(ForwardRef(Dialog))
  TransitionComponent={[Function]}
  className="editor"
  onClose={[Function]}
  open={false}
  scroll="paper"
>
  <WithStyles(ForwardRef(DialogContent))
    className="editor__content"
  >
    <WithStyles(ForwardRef(AppBar))
      position="static"
    >
      <WithStyles(ForwardRef(Toolbar))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="Close"
          color="inherit"
          onClick={[Function]}
        >
          <CloseIcon />
        </WithStyles(ForwardRef(IconButton))>
        <WithStyles(ForwardRef(Typography))
          className="toolbar-title"
          color="inherit"
          variant="h6"
        >
          Create
           Task
        </WithStyles(ForwardRef(Typography))>
        <WithStyles(ForwardRef(Button))
          color="inherit"
          onClick={[Function]}
        >
          Save
        </WithStyles(ForwardRef(Button))>
      </WithStyles(ForwardRef(Toolbar))>
    </WithStyles(ForwardRef(AppBar))>
    <div
      className="loading-bar"
    />
    <Form
      ErrorList={[Function]}
      className="editor__form"
      disabled={false}
      formData={Object {}}
      liveValidate={false}
      noHtml5Validate={false}
      noValidate={false}
      omitExtraData={false}
      onChange={[Function]}
      onError={[Function]}
      onSubmit={[Function]}
      safeRenderCompletion={false}
      schema={
        Object {
          "properties": Object {
            "description": Object {
              "default": "",
              "title": "Description",
              "type": "string",
            },
            "name": Object {
              "default": "",
              "title": "Task name",
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        }
      }
      uiSchema={
        Object {
          "description": Object {
            "ui:options": Object {
              "rows": 5,
            },
            "ui:widget": "textarea",
          },
        }
      }
    >
      <button
        className="hidden"
      />
    </Form>
  </WithStyles(ForwardRef(DialogContent))>
</WithStyles(ForwardRef(Dialog))>
`;

exports[`<TaskEditor /> Should render when it is open 1`] = `
<WithStyles(ForwardRef(Dialog))
  TransitionComponent={[Function]}
  className="editor"
  onClose={[Function]}
  open={false}
  scroll="paper"
>
  <WithStyles(ForwardRef(DialogContent))
    className="editor__content"
  >
    <WithStyles(ForwardRef(AppBar))
      position="static"
    >
      <WithStyles(ForwardRef(Toolbar))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="Close"
          color="inherit"
          onClick={[Function]}
        >
          <CloseIcon />
        </WithStyles(ForwardRef(IconButton))>
        <WithStyles(ForwardRef(Typography))
          className="toolbar-title"
          color="inherit"
          variant="h6"
        >
          Create
           Task
        </WithStyles(ForwardRef(Typography))>
        <WithStyles(ForwardRef(Button))
          color="inherit"
          onClick={[Function]}
        >
          Save
        </WithStyles(ForwardRef(Button))>
      </WithStyles(ForwardRef(Toolbar))>
    </WithStyles(ForwardRef(AppBar))>
    <div
      className="loading-bar"
    />
    <Form
      ErrorList={[Function]}
      className="editor__form"
      disabled={false}
      formData={Object {}}
      liveValidate={false}
      noHtml5Validate={false}
      noValidate={false}
      omitExtraData={false}
      onChange={[Function]}
      onError={[Function]}
      onSubmit={[Function]}
      safeRenderCompletion={false}
      schema={
        Object {
          "properties": Object {
            "description": Object {
              "default": "",
              "title": "Description",
              "type": "string",
            },
            "name": Object {
              "default": "",
              "title": "Task name",
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        }
      }
      uiSchema={
        Object {
          "description": Object {
            "ui:options": Object {
              "rows": 5,
            },
            "ui:widget": "textarea",
          },
        }
      }
    >
      <button
        className="hidden"
      />
    </Form>
  </WithStyles(ForwardRef(DialogContent))>
</WithStyles(ForwardRef(Dialog))>
`;

exports[`<TaskEditor /> Transition - Should render when it is open 1`] = `
<WithStyles(ForwardRef(Dialog))
  TransitionComponent={[Function]}
  className="editor"
  onClose={[Function]}
  open={true}
  scroll="paper"
>
  <WithStyles(ForwardRef(DialogContent))
    className="editor__content"
  >
    <WithStyles(ForwardRef(AppBar))
      position="static"
    >
      <WithStyles(ForwardRef(Toolbar))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="Close"
          color="inherit"
          onClick={[Function]}
        >
          <CloseIcon />
        </WithStyles(ForwardRef(IconButton))>
        <WithStyles(ForwardRef(Typography))
          className="toolbar-title"
          color="inherit"
          variant="h6"
        >
          Create
           Task
        </WithStyles(ForwardRef(Typography))>
        <WithStyles(ForwardRef(Button))
          color="inherit"
          onClick={[Function]}
        >
          Save
        </WithStyles(ForwardRef(Button))>
      </WithStyles(ForwardRef(Toolbar))>
    </WithStyles(ForwardRef(AppBar))>
    <div
      className="loading-bar"
    />
    <Form
      ErrorList={[Function]}
      className="editor__form"
      disabled={false}
      formData={Object {}}
      liveValidate={false}
      noHtml5Validate={false}
      noValidate={false}
      omitExtraData={false}
      onChange={[Function]}
      onError={[Function]}
      onSubmit={[Function]}
      safeRenderCompletion={false}
      schema={
        Object {
          "properties": Object {
            "description": Object {
              "default": "",
              "title": "Description",
              "type": "string",
            },
            "name": Object {
              "default": "",
              "title": "Task name",
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        }
      }
      uiSchema={
        Object {
          "description": Object {
            "ui:options": Object {
              "rows": 5,
            },
            "ui:widget": "textarea",
          },
        }
      }
    >
      <button
        className="hidden"
      />
    </Form>
  </WithStyles(ForwardRef(DialogContent))>
</WithStyles(ForwardRef(Dialog))>
`;
